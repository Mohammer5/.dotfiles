#################
#               #
# Look and Feel #
# ############# #
#               #
#################

hook global WinCreate ^[^*]+$ %{
  add-highlighter window/ number-lines -relative
}

################
#              #
# Key mappings #
# ############ #
#              #
################

## Normal mode
##############

map global normal <up> ': move-lines-up<ret>' -docstring 'move line up'
map global normal <down> ': move-lines-down<ret>' -docstring 'move line down'
map global normal <ret> ': w<ret>' -docstring 'Save'

## Insert mode
##############

# Use jj for esc
hook global InsertChar k %{ try %{
  exec -draft hH <a-k>jk<ret> d
  exec <esc>
}}

##################
#                #
# Entering Modes #
# ############## #
#                #
##################

map global user g ': enter-user-mode global<ret>' -docstring 'global mode'
map global user f ': enter-user-mode files<ret>' -docstring 'files mode'

###############
#             #
# Global mode #
# ########### #
#             #
###############
declare-user-mode global

# Exiting kak
map global global q ':q<ret>' -docstring 'exit kak'

#################
#               #
# File handling #
# ############# #
#               #
#################
declare-user-mode files

# Pick a changed file with fzf (c = changed)
map global files c ': fzf-open-changed<ret>' -docstring 'pick a changed file with fzf (c = changed)'
define-command fzf-open-changed \
  -docstring 'Pick a changed file with fzf' \
  %{
    nop %sh{
      kitty @ launch --type=overlay --cwd="$PWD" $HOME/.dotfiles/kakoune/scripts/fzf-open-changed.sh $kak_session $kak_client
    }
  }

# Pick a buffer with fzf (b = buffer)
map global files b ': fzf-open-buffer<ret>' -docstring 'pick a buffer with fzf (b = buffer)'
define-command fzf-open-buffer \
  -docstring 'Pick a buffer with fzf' \
  %{
    # Create a list to store modified status
    declare-option -hidden str-list fzf_buffer_list

    # Clear existing values
    set-option global fzf_buffer_list

    # Build list of buffers and their modified value
    evaluate-commands -no-hooks -buffer * %{
      set-option -add global fzf_buffer_list "%val{bufname}_%val{modified}"
    }

    nop %sh{
      kitty @ launch --type=overlay --cwd="$PWD" $HOME/.dotfiles/kakoune/scripts/fzf-open-buffer.sh $kak_session $kak_client $kak_opt_fzf_buffer_list
    }
  }

# Pick a file with fzf (f = file)
map global files f ': fzf-open-file<ret>' -docstring 'Pick a file with fzf (f = file)'
define-command fzf-open-file \
  -docstring 'Pick a file with fzf' \
  %{
    nop %sh{
      kitty @ launch --type=overlay --cwd="$PWD" --no-response $HOME/.dotfiles/kakoune/scripts/fzf-open-file.sh $kak_session $kak_client
    }
  }

# Pick a file with lf (e = explorer)
map global files e ': lf-open<ret>' -docstring 'Pick a file with lf (e = explorer)'
define-command lf-open \
  -docstring 'Pick a file with lf' \
  %{
    nop %sh{
      kitty @ launch \
        --type=overlay \
        --cwd="$PWD" \
        $HOME/.dotfiles/kakoune/scripts/lf-open.sh \
        $kak_buffile \
        $kak_session \
        $kak_client
    }
  }

# Create a new, colocated file
map global files n ': creat-colocated-file ' -docstring 'Create a new, colocated file (n = new)'
define-command creat-colocated-file \
  -params 1 \
  -docstring 'Create a new, colocated file (n = new)' \
  %{
    nop %sh{
      touch "$(dirname $kak_buffile)/$1"
      KAK_CMD="evaluate-commands -client $kak_client edit $1"
      echo "$KAK_CMD" | kak -p $kak_session
    }
  }
